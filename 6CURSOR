Practical 6 :    Cursor    
Name :      dhanshri pravin nemade
mysql> create database class;
Query OK, 1 row affected (0.01 sec)
mysql> use class;
Database changed
mysql> create table O_RollCall(roll_no int(3),name varchar(20));
Query OK, 0 rows affected, 1 warning (0.02 sec)
mysql> create table N_RollCall(roll_no int(3),name varchar(20));
Query OK, 0 rows affected, 1 warning (0.02 sec)
mysql> insert into O_RollCall values (1,'dhanshri');
Query OK, 1 row affected (0.01 sec)
mysql> insert into O_RollCall values (2,'renuka');
Query OK, 1 row affected (0.01 sec)
mysql> insert into O_RollCall values (3,'shravani');
Query OK, 1 row affected (0.01 sec)
mysql> insert into O_RollCall values (4,'sumit');
Query OK, 1 row affected (0.01 sec)
mysql> insert into O_RollCall values (5,'meghraj');
Query OK, 1 row affected (0.01 sec)
mysql> insert into O_RollCall values (6,'kavita');
Query OK, 1 row affected (0.01 sec)
mysql> insert into O_RollCall values (7,'meghana');
Query OK, 1 row affected (0.01 sec)
mysql> select * from O_RollCall;
+---------+----------+
| roll_no | name     |
+---------+----------+
|       1 | dhanshri |
|       2 | renuka   |
|       3 | shravani |
|       4 | sumit    |
|       5 | meghraj  |
|       6 | kavita   |
|       7 | meghana  |
+---------+----------+
7 rows in set (0.00 sec)
mysql> select * from N_RollCall;
Empty set (0.00 sec)
mysql> delimiter //
mysql> create procedure cursor_proc_p1()
    -> begin
    -> declare fin integer default 0;
    -> declare old_roll int(3);
    -> declare old_name varchar(20);
    -> declare new_roll int(3);
    -> declare old_csr cursor for select roll_no,name from O_RollCall;
    -> declare new_csr cursor for select roll_no from N_RollCall;
    -> declare continue handler for not found set fin=1;
    -> open old_csr;
    -> open new_csr;
    -> ss:loop
    -> fetch old_csr into old_roll,old_name;
    -> fetch new_csr into new_roll;
    -> if fin=1 then
    -> leave ss;
    -> end if;
    -> if old_roll<>new_roll then
    -> insert into N_RollCall values(old_roll,old_name);
    -> end if;
    -> end loop;
    -> close old_csr;
    -> close new_csr;
    -> end //
Query OK, 0 rows affected, 2 warnings (0.01 sec)
mysql> create procedure cursor_proc_p2(in r1 int)
    -> begin
    -> declare r2 int;
    -> declare exit_loop boolean;
    -> declare c1 cursor for select roll_no from O_RollCall
    -> where roll_no>r1;
    -> declare continue handler for not found set
    -> exit_loop=true;
    -> open c1;
    -> e_loop:loop
    -> fetch c1 into r2;
    -> if not exists(select * from N_RollCall where roll_no=r2)
    -> then
    -> insert into N_RollCall select * from O_RollCall where roll_no=r2;
    -> end if;
    -> if exit_loop
    -> then
    -> close c1;
    -> leave e_loop;
    -> end if;
    -> end loop e_loop;
    -> end;//
Query OK, 0 rows affected (0.01 sec)
mysql> call cursor_proc_p2(5); //
Query OK, 0 rows affected (0.01 sec)
mysql> select * from O_RollCall; //
+---------+----------+
| roll_no | name     |
+---------+----------+
|       1 | dhanshri |
|       2 | renuka   
|       3 | shravani |
|       4 | sumit    |
|       5 | meghraj  |
|       6 | kavita   |
|       7 | meghana  |
+---------+----------+
7 rows in set (0.00 sec)
mysql> select * from N_RollCall; //
+---------+---------+
| roll_no | name    |
+---------+---------+
|       6 | kavita  |
|       7 | meghana |
+---------+---------+
2 rows in set (0.00 sec)
mysql> call cursor_proc_p2(3); //
Query OK, 0 rows affected (0.01 sec)
mysql> call cursor_proc_p1(); //
Query OK, 0 rows affected (0.02 sec)
mysql> select * from O_RollCall; //
+---------+----------+
| roll_no | name     |
+---------+----------+
|       1 | dhanshri |
|       2 | renuka   |
|       3 | shravani |
|       4 | sumit    |
|       5 | meghraj  |
|       6 | kavita   |
|       7 | meghana  |
+---------+----------+
7 rows in set (0.00 sec)
mysql> select * from N_RollCall; //
+---------+----------+
| roll_no | name     |
+---------+----------+
|       6 | kavita   |
|       7 | meghana  |
|       4 | sumit    |
|       5 | meghraj  |
|       1 | dhanshri |
|       2 | renuka   |
|       3 | shravani |
|       4 | sumit    |
+---------+----------+
8 rows in set (0.00 sec)
